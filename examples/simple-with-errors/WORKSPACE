load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

skylib_version = "1.0.3"

http_archive(
    name = "bazel_skylib",
    sha256 = "1c531376ac7e5a180e0237938a2536de0c54d93f5c278634818e0efc952dd56c",
    type = "tar.gz",
    url = "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/{}/bazel-skylib-{}.tar.gz".format(skylib_version, skylib_version),
)

rules_scala_version = "9ddca47d8f81af2204f725547eb550a5c89820b0"

http_archive(
    name = "io_bazel_rules_scala",
    sha256 = "4d20d5899979fb6d4f47d1abcd919f376b978ef3709e18f68a227e8c8e43cdbe",
    strip_prefix = "rules_scala-%s" % rules_scala_version,
    type = "zip",
    url = "https://github.com/aishfenton/rules_scala/archive/%s.zip" % rules_scala_version,
)

# Stores Scala version and other configuration
# 2.12 is a default version, other versions can be use by passing them explicitly:
# scala_config(scala_version = "2.11.12")
load("@io_bazel_rules_scala//:scala_config.bzl", "scala_config")

scala_config(
    # scala_version = "2.12.",
)

load("@io_bazel_rules_scala//scala:scala.bzl", "rules_scala_setup", "rules_scala_toolchain_deps_repositories")

# loads other rules Rules Scala depends on
rules_scala_setup()

# loads Maven deps like Scala compiler and standard libs, on production projects you should consider
# defining a custom deps toolchains to use your project libs instead
rules_scala_toolchain_deps_repositories(fetch_sources = True)

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

register_toolchains("//toolchains:my_scala_toolchain")

load("@io_bazel_rules_scala//scala/semanticdb:semanticdb_repositories.bzl", "semanticdb_repositories")
semanticdb_repositories()

# Load bazel-bsp-rules

local_repository(
    name = "bazel-bsp-rules",
    path = "../../bazel_rules"
)

load("@bazel-bsp-rules//:bazel_bsp_setup.bzl", "bazel_bsp_setup")
bazel_bsp_setup()

